@page "/Entradas/Edit/{IdEntrada:int}"
@using P1_ap1_FelixMunoz.Models
@using P1_ap1_FelixMunoz.Services
@inject HuacalesService huacalesService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Editar Entrada de Huacales</PageTitle>

@if (entrada != null)
{
    <div class="card-shadow">
        <div class="card-header bg-white text-center">
            <h5 class="mb-0" ">Editar Entrada</h5>
        </div>
        <div class="card-body">
            <EditForm Model="entrada" OnValidSubmit="GuardarCambios">
                <DataAnnotationsValidator />

                <div class="mb-3">
                    <label class="form-label fw-bold">Fecha</label>
                    <InputDate class="form-control" @bind-Value="entrada.Fecha" />
                    <ValidationMessage For="@(() => entrada.Fecha)" />
                </div>

                <div class="mb-3">
                    <label class="form-label fw-bold">Nombre del Cliente</label>
                    <InputText class="form-control" @bind-Value="entrada.NombreCliente" />
                    <ValidationMessage For="@(() => entrada.NombreCliente)" />
                </div>

                <div class="mb-3">
                    <label class="form-label fw-bold">Cantidad</label>
                    <InputNumber class="form-control" @bind-Value="entrada.Cantidad" />
                    <ValidationMessage For="@(() => entrada.Cantidad)" />
                </div>

                <div class="mb-3">
                    <label class="form-label fw-bold">Precio</label>
                    <InputNumber class="form-control" @bind-Value="entrada.Precio" />
                    <ValidationMessage For="@(() => entrada.Precio)" />
                </div>

                <div class="mb-3">
                    <label class="form-label fw-bold">Importe</label>
                    <input class="form-control" readonly value="@( (entrada.Cantidad * entrada.Precio).ToString("C2") )" />
                </div>

                <div class="d-flex justify-content-end gap-2 mt-3">
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-save"></i> Guardar Cambios
                    </button>
                    <a href="/Entradas/Index" class="btn btn-secondary">Cancelar</a>
                    <button type="button" class="btn btn-danger" @onclick="() => EsVisibleModalEliminar = true">Eliminar</button>
                </div>
            </EditForm>
        </div>
    </div>
}
else
{
    <p>Cargando...</p>
}

@if (EsVisibleModalEliminar)
{
    <div class="modal d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title">Confirmar Eliminación</h5>
                    <button type="button" class="btn-close" @onclick="() => EsVisibleModalEliminar = false"></button>
                </div>
                <div class="modal-body">
                    <p>¿Deseas eliminar esta entrada?</p>
                    <p><strong>@entrada?.NombreCliente</strong> - Cant: @entrada?.Cantidad - Precio: @entrada?.Precio.ToString("C2")</p>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" @onclick="() => EsVisibleModalEliminar = false">Cancelar</button>
                    <button class="btn btn-danger" @onclick="ConfirmarEliminar">Eliminar</button>
                </div>
            </div>
        </div>
    </div>
}

@if (!string.IsNullOrEmpty(MensajeError))
{
    <div class="alert alert-danger mt-2">@MensajeError</div>
}

@code {
    [Parameter] public int IdEntrada { get; set; }
    private EntradasHuacales? entrada;
    private bool EsVisibleModalEliminar { get; set; } = false;
    public string MensajeError { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        entrada = await huacalesService.Buscar(IdEntrada);
    }

    private async Task GuardarCambios()
    {
        if (entrada == null) return;

        else if (await huacalesService.Guardar(entrada))
        {
            navigationManager.NavigateTo("/Entradas/Index");
        }

    }

    private async Task ConfirmarEliminar()
    {
        if (entrada != null)
        {
            if (await huacalesService.Eliminar(entrada.IdEntrada))
            {
                EsVisibleModalEliminar = false;
                navigationManager.NavigateTo("/Entradas/Index");
            }
        }
    }
}
